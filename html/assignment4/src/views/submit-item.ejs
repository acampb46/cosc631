<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= pageTitle || "Submit Item" %></title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css"
          integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9"
          crossorigin="anonymous">
</head>
<body class="bg-light">
<div class="container py-4">
    <!-- Header -->
    <header class="text-center mb-4">
        <h1 class="display-5"><%= headerText || "Submit a New Item" %></h1>
    </header>

    <!-- Form Section -->
    <form id="submit-item-form" class="needs-validation" novalidate method="POST" action="/assignment4/items/create">
        <div class="mb-3">
            <label for="title" class="form-label">Item Title</label>
            <input type="text" class="form-control" id="title" name="title" placeholder="Enter item title" required>
            <div class="invalid-feedback">
                Please provide a title for the item.
            </div>
        </div>

        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <textarea class="form-control" id="description" name="description" rows="4"
                      placeholder="Enter a brief description" required></textarea>
            <div class="invalid-feedback">
                Please provide a description for the item.
            </div>
        </div>

        <div class="mb-3">
            <label for="category" class="form-label">Category</label>
            <select class="form-select" id="category" name="category" required>
                <option value="for sale" selected>For Sale</option>
            </select>
            <div class="invalid-feedback">
                Please select a category.
            </div>
        </div>

        <div class="mb-3" id="price-section">
            <label for="price" class="form-label">Price (USD)</label>
            <input type="number" class="form-control" id="price" name="price" step="0.01" placeholder="Enter the price" required>
            <div class="invalid-feedback">
                Please enter a valid price.
            </div>
        </div>

        <div class="mb-3" id="auction-details" style="display: none;">
            <label for="starting-bid" class="form-label">Starting Bid (USD)</label>
            <input type="number" class="form-control" id="starting-bid" name="startingBid" step="0.01" placeholder="Enter the starting bid">
            <div class="invalid-feedback">
                Please enter a valid starting bid.
            </div>

            <label for="auction-end" class="form-label mt-3">Auction End Time</label>
            <input type="datetime-local" class="form-control" id="auction-end" name="auctionEnd">
            <div class="invalid-feedback">
                Please provide a valid end time for the auction.
            </div>
        </div>

        <div class="mb-3">
            <label for="quantity" class="form-label">Quantity</label>
            <input type="number" class="form-control" id="quantity" name="quantity" placeholder="Enter quantity"
                   required>
            <div class="invalid-feedback">
                Please specify the quantity available.
            </div>
        </div>

        <div class="mb-3">
            <label for="imageUrl" class="form-label">Or Enter an Image URL</label>
            <input type="url" class="form-control" id="imageUrl" name="imageUrl" placeholder="Enter a valid image URL">
            <div class="invalid-feedback">
                Please provide a valid URL.
            </div>
        </div>

        <div class="text-center">
            <button type="submit" class="btn btn-primary">Submit Item</button>
        </div>
    </form>

</div>

<!-- Bootstrap JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
        crossorigin="anonymous">
</script>
<script>
    const categoryDropdown = document.getElementById('category');
    const priceSection = document.getElementById('price-section');
    const auctionDetails = document.getElementById('auction-details');

    categoryDropdown.addEventListener('change', function () {
        if (this.value === 'auction') {
            // Show auction-specific inputs
            priceSection.style.display = 'none';
            auctionDetails.style.display = 'block';
            document.getElementById('price').required = false;
            document.getElementById('starting-bid').required = true;
            document.getElementById('auction-end').required = true;
        } else {
            // Show price input for "For Sale"
            priceSection.style.display = 'block';
            auctionDetails.style.display = 'none';
            document.getElementById('price').required = true;
            document.getElementById('starting-bid').required = false;
            document.getElementById('auction-end').required = false;
        }
    });

    document.getElementById('submit-item-form').addEventListener('submit', async function (event) {
        event.preventDefault(); // Prevent the default form submission

        const formElement = document.getElementById('submit-item-form');

        // Create a JSON object from the form data
        const formData = {
            title: document.getElementById('title').value,
            description: document.getElementById('description').value,
            category: document.getElementById('category').value,
            price: document.getElementById('price').value,
            quantity: document.getElementById('quantity').value,
            imageUrl: document.getElementById('imageUrl').value,
        };

        // If it's an auction, include auction-related fields
        if (formData.category === 'auction') {
            formData.startingBid = document.getElementById('starting-bid').value;
            formData.auctionEnd = document.getElementById('auction-end').value;
            delete formData.price; // Remove price for auction items
        }

        try {
            // Send a POST request with a JSON payload
            const response = await fetch('/assignment4/items/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json', // Specify JSON content type
                },
                body: JSON.stringify(formData), // Send formData as JSON
            });

            if (response.ok) {
                // If the response is OK, show an alert and redirect to the dashboard
                alert('Item submitted successfully!');
                window.location.href = '/assignment4/dashboard/load';
            } else {
                // If there's an error, show an alert with the error message
                const errorData = await response.json();
                alert(`Error: ${errorData.message}`);
            }
        } catch (error) {
            // Handle any network or other errors
            console.error('Error submitting item:', error);
            alert('An unexpected error occurred. Please try again later.');
        }
    });

    // Bootstrap form validation
    (function () {
        'use strict';
        const forms = document.querySelectorAll('.needs-validation');

        Array.from(forms).forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    })();
</script>
</body>
</html>
